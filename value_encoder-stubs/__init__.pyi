from collections.abc import Iterable
from typing import Sequence, overload

from numpy import int16
from numpy.typing import NDArray

class ValueEncoder:
    def __init__(self) -> None: ...
    @property
    def classes_(self) -> str: ...
    @overload
    def fit(self, value: str | bytes) -> ValueEncoder: ...
    @overload
    def fit(self, values: Iterable[str | bytes]) -> ValueEncoder: ...
    @overload
    def transform(self, value: str | bytes, cap: bool = False) -> NDArray[int16]: ...
    @overload
    def transform(self, values: Sequence[str | str], padding_value: int = -1, cap: bool = False) -> NDArray[int16]: ...
    def inverse_transform(self, value: NDArray[int16]) -> str: ...
